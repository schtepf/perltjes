# -*-cperl-*-
#
# HotSync Configuration File
# (must be valid Perl code)
#

## This is a sample of a HotSync configuration file, which you may use
## as a starting point for your own configuration. Simply copy this
## file to ~/.HotSync and edit it to suit your needs. See the the
## CONFIGURATION FILE section of the HotSync help page ("HotSync
## --help" or "perlpod HotSync") for a detailed description of the
## configuration file format.


## Since the configuration file is executed as a Perl script, we can
## defined variables and use all sorts of other tricks as well.
## (variables should always be lexical to avoid clashes with internal variables)
my $Rock = "rock.ims.uni-stuttgart.de";
my $RemoteHome = "/home/users3/evert";
my $Backup_Dir = "$Remote_Home/Backups";
my $Local_Backup_Dir = "/home/Backup/evert";

## If necessary, the Config() function can be used to change some
## internal configuration settings. On most computers, this should not
## be necessary.
Config(
       "tar" => "gtar",				# if your "tar" program isn't GNU tar
       "rsync" => "/usr/bin/rsync",		# full  path to rsync binary if not in $PATH
      );

## Use the Global() function to set basic parameters, e.g. the name of
## the remote host, your login name (on the remote host), etc.
Global(
       "host" => "$Rock",			# the name of the remote host
       "user" => "evert",			# user name for login on the remote host
       "backup" => 0,				# if set to one, overwritten files are backed up as *~
       "sync-all" => 0,				# by default, certain file types (*.o, *.so, *~, ...) are not transferred
       );

## A simple synchronisation task defined with the Sync() function.
Sync("VL-Formale-Sprachen",			# name of the synchronisation task
     # one-line description shown in task listings (-list flag)
     "description" => "synchronise data from 'PS Formale Sprachen'",
     # the root of the directory tree on the local host
     "local-root" => "/home/evert/Vorlesung/Formale-Sprachen",
     # the root of the directory tree on the remote host
     "remote-root" => "/global/teaching/2002-WS/Formale-Sprachen",
     # for important data, it is a good idea to make backups when overwriting files
     "backup" => 1,
     );

## A more complex example: here, only part of the directory tree is
## synchronised (excluding large data directories and files that are
## useful only on a particular machine). Note that the subdirectories
## must be in the same position relative to the root directories on 
## local and remote host (i.e. trees with different structures cannot
## be synchronised directly). Also, all "auto" subdirectories (which
## contain files automatically generated by the Emacs editor) are 
## skipped, regardless of their position in the directory tree.
Sync("VL-Statistik",
     "description" => "synchronise data from 'PS Statistische Methoden'",
     "local-root" => "/home/evert/Vorlesung/Statistik",
     "remote-root" => "/global/teaching/2002-SS/Statistische-Methoden",
     # synchronise only the following subdirectories, relative to the root of the tree
     "subdirs" => ["Notes", "Material/R", "Handout", "ps", "pdf", "papers"],
     # list files and directories (with trailing "/") that should be excluded
     # from the synchronisation process (patterns may use the "*" wildcard)
     "exclude" => [ "auto/" ],
     "backup" => 1,
     );

## Tasks can be combined into multi-tasks. Note that in this case,
## the command "HotSync VL-*" would achieve the same effect. 
Multi("VL",
      "description" => "synchronise data for all seminars",
      # component tasks to execute
      "subtasks" => [ "VL-Formale-Sprachen", "VL-Statistik" ],
    );

## The Archive() function defines archive tasks, which provide an easy
## and fast way to back up important data. The options are similar to
## those of Sync(), but "remote-root" specifies a directory where
## the backup archives are stored.
Archive("Backup-Project",
	"description" => "back up project directories",
	# back up this directory tree
	"local-root" => "/home/evert/Project",
	# directory on remote machine for backup archives
	"remote-root" => "$Backup_Dir",
	);

## The "subdirs" argument can also be used to specify individual files,
## e.g. for a backup of various important configuration files.
Archive("Backup-Misc",
	"description" => "back up miscellaenous data \& config files",
	# choose a directory high up in the tree as root, e.g. the user's home directory
	"local-root" => "/home/evert",
	"remote-root" => "$Backup_Dir",
	"subdirs" => [
		      ".HotSync",		# always a good idea to back up HotSync's configuration file
		      ".emacs",			# another single file (Emacs configuration)
		      ".gimp-1.2/scripts",	# this is a directory (but not at the top level of the tree)
		     ]
	);

## HotSync can also be used to back up directories on the local host
## itself (e.g. while away from a network connection). Being slightly
## more convenient than running tar directly, this should help to
## encourage regular backups of mission-critical data. :-)

## For a local backup, the name of the remote host must be changed to
## "localhost". This can be done with a call to the Global() function,
## which changes the setting for the remainder of the configuration
## file. Alternatively, configuration options can be overridden
## directly in the Sync() and Archive() commands.

Archive("Local-Project",
	"description" => "local backup of project directories",
	# override global setting for name of remote host
	"host" => "localhost",
	# the root of the directory tree that will be backed up
	"local-root" => "/home/evert/Project",
	# this is the directory where the archive will be stored (on the local host!)
	"remote-root" => "$Local_Backup_Dir",
	);

Archive("Local-Misc",
	"description" => "local backup of config files",
	"host" => "localhost",
	"local-root" => "/home/evert",
	"remote-root" => "$Local_Backup_Dir",
	"subdirs" => [
		      ".HotSync",		# always a good idea to back up HotSync's configuration file
		      ".emacs",			# another single file (Emacs configuration)
		      ".gimp-1.2/scripts",	# this is a directory (but not at the top level of the tree)
		     ]
	);
